{% assign ss = section.settings %}

{% schema %}
{
  "name": "All Brands Page",
  "settings": [
    {
      "type": "image_picker",
      "id": "background_image",
      "label": "Background Image"
    },
    {
      "type": "text",
      "id": "title",
      "label": "Title",
      "default": "Healf Brands"
    },
    {
      "type": "color",
      "id": "title_color",
      "label": "Title Color",
      "default": "#FFFFFF"
    },
    {
      "type": "textarea",
      "id": "description",
      "label": "Description",
      "default": "Browse hundreds of the best global wellbeing brands <br> backed by our Three Step Curation process."
    },
    {
      "type": "color",
      "id": "description_color",
      "label": "Description Color",
      "default": "#FFFFFF"
    },
    {
      "type": "select",
      "id": "button_1_action",
      "label": "Button 1 Action",
      "options": [
        { "value": "browse", "label": "Browse all" },
        { "value": "sort", "label": "Sort by Popularity" }
      ]
    },
    {
      "type": "text",
      "id": "button_1_title",
      "label": "Button 1 Title",
      "default": "Filters"
    },
    {
      "type": "url",
      "id": "button_1_url",
      "label": "Button 1 URL"
    },
    {
      "type": "select",
      "id": "button_2_action",
      "label": "Button 2 Action",
      "options": [
        { "value": "filter", "label": "Filters" },
        { "value": "sort", "label": "Sort by: Popularity" }
      ]
    },
    {
      "type": "text",
      "id": "button_2_title",
      "label": "Button 2 Title",
      "default": "Sort by: Popularity"
    },
    {
      "type": "url",
      "id": "button_2_url",
      "label": "Button 2 URL"
    },
    {
      "type": "text",
      "id": "search_placeholder",
      "label": "Search Placeholder Text",
      "default": "Search all brands"
    },
    {
      "type": "header",
      "content": "Padding"
    },
    {
      "type": "range",
      "id": "padding_top",
      "label": "Padding Top",
      "default": 78,
      "min": 0,
      "max": 200,
      "step": 2,
      "unit": "px"
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "label": "Padding Bottom",
      "default": 78,
      "min": 0,
      "max": 200,
      "step": 2,
      "unit": "px"
    }
  ],
  "blocks": [
    {
      "type": "trending_brand",
      "limit": 3,
      "name": "Trending Brand",
      "settings": [
        {
            "type": "image_picker",
            "id": "background_image",
            "label": "Background Image"
          },
          {
            "type": "text",
            "id": "title",
            "label": "Title",
            "default": "Healf Brands"
          },
          {
            "type": "url",
            "id": "cta_action",
            "label": "CTA Action"
          },
      ]
    }
  ],
  "presets": [
    {
      "name": "All Brands Page"
    }
  ]
}
{% endschema %}

<div>
  <div
    class="bs-devshop__all-brands__section"
    style="background-image: url('{{ section.settings.background_image | img_url: 'master' }}'); "
  >
    <div class="bs-devshop__all-brands__content page-width">
      <div class="bs-devshop__all-brands__text">
        <h1 class="bs-devshop__all-brands__title" style="color: {{ ss.title_color }}">{{ ss.title }}</h1>
        <div class="bs-devshop__all-brands__description" style="color: {{ ss.description_color }}">
          {{ ss.description }}
        </div>
      </div>
    </div>
  </div>

  <div class="bs-devshop__trending-now">
    <div class="page-width">
      <h3 class="bs-devshop__trending-title">TRENDING NOW</h3>
    </div>
    <div class="bs-devshop__trending-now-container page-width">
      {% assign trending_brands =  section.blocks | where: "type", "trending_brand" %}
      {% for trend in trending_brands %}
        {% assign ts = trend.settings %}
        <div class="bs-devshop__trending-now-brand-card">
          {{ ts.background_image | image_url: width: 600 | image_tag }}
          <a href="{{ ts.cta_action }}">
            {{ ts.title }}
          </a>
        </div>
      {% endfor %}
    </div>
  </div>

  <div class="bs-devshop__all-brands__container">
    <div class="page-width">
      <div class="bs-devshop__all-brands__actions">
        <div class="bs-devshop__all-brands__search-container">
          <div class="bs-devshop__all-brands__search-input__div">
            <input type="text" id="brandSearchInput" class="bs-devshop__all-brands__search-input" placeholder="{{ ss.search_placeholder }}">
            <button id="brandSearchButton" class="bs-devshop__all-brands__search-button">
              {% render 'bs-devshop__icon-search-white' %}
            </button>
          </div>
        </div>
        <div class="bs-devshop__all-brands__buttons">
          <a href="{{ ss.button_1_url }}" class="bs-devshop__all-brands__button">{{ ss.button_1_title }}</a>
          <a href="{{ ss.button_2_url }}" class="bs-devshop__all-brands__button">{{ ss.button_2_title }}</a>
        </div>
      </div>

      {% assign brand_categories = "eat_brands,move_brands,mind_brands,sleep_brands,uncategorized_brands" | split: "," %}
      {% assign max_pagination = 250 %}

      {% capture brand_titles %}
      {% for category in brand_categories %}
        {% paginate shop.metaobjects[category].values by max_pagination %}
          {% for brand in shop.metaobjects[category].values %}{{ brand.title }}|{% endfor %}
          {% if paginate.next %}
            {% for i in (2..paginate.pages) %}
              {% paginate shop.metaobjects[category].values by max_pagination, page: i %}
                {% for brand in shop.metaobjects[category].values %}{{ brand.title }}|{% endfor %}
              {% endpaginate %}
            {% endfor %}
          {% endif %}
        {% endpaginate %}
      {% endfor %}
      {% endcapture %}

      {% assign sorted_titles = brand_titles | split: '|' | sort | uniq %}

      <div class="bs-devshop__all-brands__content-container">
        <div id="brandGrid" class="bs-devshop__all-brands__content-grid">
          {% for title in sorted_titles %}
            {% assign brand_rendered = false %}

            {% for category in brand_categories %}
              {% unless brand_rendered %}
                {% paginate shop.metaobjects[category].values by max_pagination %}
                  {% for brand in shop.metaobjects[category].values %}
                    {% if brand.title == title %}
                      {% render 'bs-devshop__brand-follow-card',
                        image: brand.image,
                        title: brand.title,
                        link: brand.link,
                        new: brand.new,
                        image_bg_color: brand.background_color
                      %}
                      {% assign brand_rendered = true %}
                      {% break %}
                    {% endif %}
                  {% endfor %}
                  {% if brand_rendered %}{% break %}{% endif %}
                  {% if paginate.next %}
                    {% for i in (2..paginate.pages) %}
                      {% paginate shop.metaobjects[category].values by max_pagination, page: i %}
                        {% for brand in shop.metaobjects[category].values %}
                          {% if brand.title == title %}
                            {% render 'bs-devshop__brand-follow-card',
                              image: brand.image,
                              title: brand.title,
                              link: brand.link,
                              new: brand.new,
                              image_bg_color: brand.background_color
                            %}
                            {% assign brand_rendered = true %}
                            {% break %}
                          {% endif %}
                        {% endfor %}
                        {% if brand_rendered %}{% break %}{% endif %}
                      {% endpaginate %}
                      {% if brand_rendered %}{% break %}{% endif %}
                    {% endfor %}
                  {% endif %}
                {% endpaginate %}
              {% endunless %}
            {% endfor %}
          {% endfor %}
        </div>
      </div>
    </div>
  </div>
</div>

{% stylesheet %}
  .bs-devshop__all-brands__section {
    display: flex;
    flex-direction: column;
    justify-content: flex-end;
    align-items: center;
    background-size: cover;
    background-position: center center;
    background-repeat: no-repeat;
    min-height: 42.8rem;
    position: relative;
  }

  .bs-devshop__all-brands__content {
    width: 100%;
  }

  .bs-devshop__all-brands__title {
    font-size: 7rem;
    font-weight: 500;
    line-height: 6.6rem;
    text-align: left;
  }

  .bs-devshop__all-brands__description {
    font-size: 2.2rem;
    font-weight: 400;
    word-wrap: break-word;
    margin-bottom: 4.4rem;
    margin-top: 1.7rem;
    text-align: left;
  }

  .bs-devshop__all-brands__actions {
    width: 100%;
    display: grid;
    grid-template-columns: 1fr 1fr;
    align-items: center;
    gap: 2rem;
    padding: 4.9rem 0 6.5rem 0;
    background-color: #000000;
  }

  .bs-devshop__all-brands__buttons {
    display: flex;
    gap: 1.7rem;
    justify-content: flex-end;
  }

  .bs-devshop__all-brands__button {
    background-color: #fff;
    color: #000;
    padding: 2.1rem 3.8rem;
    border-radius: 3.2rem;
    border: 0.03rem solid #fff;
    text-decoration: none;
    font-weight: 400;
    font-size: 1.8rem;
    line-height: 2rem;
    transition: background-color 0.3s;
    display: none;
  }

  .bs-devshop__all-brands__button:hover {
    background-color: #f0f0f0;
  }

  .bs-devshop__all-brands__search-container {
    display: flex;
    justify-content: flex-start;
  }

  .bs-devshop__all-brands__search-input__div {
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: start;
    border-radius: 3.2rem;
    padding: 1.2rem 3.1rem;
    border: 0.1rem solid #ffffff;
    max-width: 30rem;
    background-color: transparent;
  }

  .bs-devshop__all-brands__search-input {
    width: 90%;
    color: #ffffff;
    background-color: transparent;
    border: none;
    font-size: 1.8rem;
    font-weight: 350;
    padding: 0;
  }

  .bs-devshop__all-brands__search-input::placeholder {
    color: #ffffff;
    font-size: 1.8rem;
  }

  .bs-devshop__all-brands__search-button {
    background-color: transparent;
    border: none;
    margin-left: 1rem;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .bs-devshop__all-brands__search-icon {
    width: 1.8rem;
    height: 1.8rem;
  }

  .bs-devshop__all-brands__container {
    background-color: #000000;
  }

  .bs-devshop__all-brands__content-container {
    width: 100%;
  }

  .bs-devshop__all-brands__content-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(21rem, 1fr));
    gap: 3.2rem;
    padding-bottom: 24rem;
    justify-content: center;
    justify-items: start;
    margin: 0 auto;
    max-width: 100%;
  }

  @media (max-width: 767px) {
    .bs-devshop__all-brands__title {
      font-size: 5.5rem;
      font-weight: 500;
      line-height: 6.6rem;
      text-align: left;
    }

    .bs-devshop__all-brands__text {
      width: 100%;
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: start;
    }
    .bs-devshop__all-brands__description {
      font-size: 1.9rem;
      text-align: left;
    }
    .bs-devshop__all-brands__actions {
      position: static;
      grid-template-columns: 1fr;
      padding: 4rem 0 4rem 0;
    }

    .bs-devshop__all-brands__search-container {
      justify-content: start;
    }

    .bs-devshop__all-brands__buttons {
      display: flex;
      flex-direction: row;
      justify-content: space-between;
      gap: 1rem;
    }

    .bs-devshop__all-brands__button {
      flex: 1;
      max-width: 48%;
      text-align: center;
      padding: 1.8rem 2rem;
    }

    .bs-devshop__all-brands__search-input__div {
      min-width: 100%;
      border: 0.1rem solid #ffffff;
    }

    .bs-devshop__all-brands__search-input {
      text-align: left;
    }

    .bs-devshop__all-brands__search-button {
      justify-self: flex-end;
    }

    .bs-devshop__all-brands__content-grid {
      display: grid;
      grid-template-columns: repeat(3, 1fr);
      gap: 1.2rem;
      padding-bottom: 3.2rem;
    }
  }

  @media (max-width: 439px) {
    .bs-devshop__all-brands__description br {
      display: none;
    }
    .bs-devshop__all-brands__buttons {
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      gap: 1.7rem;
      justify-content: center;
    }

    .bs-devshop__all-brands__button {
      width: 100%;
      max-width: unset;
      text-align: center;
      padding: 1.5rem;
    }

    .bs-devshop__all-brands__content-grid {
      grid-template-columns: repeat(2, 1fr);
      gap: 1.2rem;
      padding-bottom: 3.2rem;
    }
  }

  @media screen and (min-width: 768px) and (max-width: 1023px) {
    .bs-devshop__all-brands__button {
      padding: 1.8rem 2.5rem;
    }
  }

  .bs-devshop__trending-now {
    padding-top: 5rem;
    background-color: black;
  }

  .bs-devshop__trending-title {
    color: white;
    font-size: 2.5rem;
    margin-bottom: 4rem;
  }

  .bs-devshop__trending-now-container {
    display: flex;
    justify-content: space-between;
    gap: 3rem;
    padding-top: 5rem;
  }

  .bs-devshop__trending-now-brand-card {
    position: relative;
    border-radius: 0.4rem;
    overflow: hidden;   
    height: 18.4rem;
    width: 100%;
    max-width: 39.7rem;
  }

  @media screen and (max-width: 768px) {
    .bs-devshop__trending-now-container {
      --padding-horizontal: calc(calc(calc(100vw - var(--page-width)) / 2) + 2rem);
      display: flex;
      overflow-x: auto;
      overflow-y: hidden;
      scroll-snap-type: x mandatory;
      scrollbar-width: none;
      -ms-overflow-style: none;
      padding: 0 max(var(--padding-horizontal), 2rem);
    }

    .bs-devshop__trending-now-brand-card {
      max-width: unset;
      min-width: 100%;
    }
  }

  .bs-devshop__trending-now-brand-card img {
    position: absolute;
    left: 0;
    right: 0;
    top: 0;
    bottom: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .bs-devshop__trending-now-brand-card a {
    background-color: white;
    color: black;
    border-radius: 5rem;
    position: absolute;
    right: 2.4rem;
    bottom: 1.4rem;
    
    z-index: 2;
    min-width: 166.32px;
    padding: 0.7rem;
    font-size: 1.2rem !important;

    text-align: center;
    transition: all 0.3s ease-out;
  }

  .bs-devshop__trending-now-brand-card a:hover {
    color: white;
    background-color: black;
    transition: all 0.3s ease-out;
  }

{% endstylesheet %}

{% javascript %}
document.addEventListener('DOMContentLoaded', function() {
  const searchInput = document.getElementById('brandSearchInput');
  const brandGrid = document.getElementById('brandGrid');

  const noBrandMessage = document.createElement('div');
  noBrandMessage.textContent = 'No brand found';
  noBrandMessage.style.display = 'none'; 
  noBrandMessage.style.fontSize = '1.6rem';
  noBrandMessage.style.textAlign = 'center';
  noBrandMessage.style.color = '#fff';
  brandGrid.appendChild(noBrandMessage);
  
  searchInput.addEventListener('input', function() {
    const searchQuery = this.value.toLowerCase().trim();
    const brandCards = brandGrid.querySelectorAll('.bs-devshop__snippet__brand-follow-card');
    let brandFound = false;

    brandCards.forEach(card => {
      const brandTitle = card.querySelector('.bs-devshop__brand-follow-card-title').textContent.toLowerCase();
      if (brandTitle.includes(searchQuery)) {
        card.style.display = '';
        brandFound = true;

      } else {
        card.style.display = 'none';
      }
    });
    noBrandMessage.style.display = brandFound ? 'none' : 'block';
  });
});
{% endjavascript %}