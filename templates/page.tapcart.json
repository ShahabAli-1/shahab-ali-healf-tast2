{"sections":{"main":{"type":"main-page","disabled":true,"settings":{"padding_top":28,"padding_bottom":28}},"custom_liquid_dmMFcx":{"type":"custom-liquid","settings":{"custom_liquid":"<div style=\"height: 200vw;\">&nbsp;<\/div>\n<style>\n.custom-liquid {\n  margin-top: -120px;\n}\n#announcementBarButton {\n  display: none !important;\n}\nbody {\n    background-color: #000 !important;\n}\nheader, footer {\n  display: none !important;\n}\n.product-recommendations__wrapper {\n  display: none !important;\n}\n<\/style>\n<script>\n\/\/ Function to set the opacity of #status-app\nfunction setStatusAppOpacity() {\n  const statusApp = document.querySelector('#status-app');\n  if (statusApp) {\n    const flyoutClose = statusApp.shadowRoot.querySelector('.flyout-close');\n    if (flyoutClose) {\n      flyoutClose.style.display = 'none';\n    }\n  }\n}\n\n\/\/ Create a MutationObserver to watch for the addition of #status-app\nconst observer = new MutationObserver((mutationsList, observer) => {\n  for (const mutation of mutationsList) {\n    if (mutation.type === 'childList') {\n      const statusApp = document.querySelector('#status-app');\n      if (statusApp) {\n        setStatusAppOpacity();\n        observer.disconnect(); \/\/ Stop observing once the element is found and modified\n        break;\n      }\n    }\n  }\n});\n\n\/\/ Start observing the document body for changes\nobserver.observe(document.body, { childList: true, subtree: true });\n\n\/\/ Check if #status-app is already present on page load\nwindow.addEventListener('DOMContentLoaded', (event) => {\n  setStatusAppOpacity();\n});\n<\/script>","class":"","color":"#000000","padding_top":20,"padding_bottom":20}},"recharge_recommendations_f8k8Gt":{"type":"recharge-recommendations","settings":{"heading":"Add to your orders","products_to_show":10,"image_ratio":"square","show_secondary_image":true,"show_vendor":true,"show_rating":false,"padding_top":0,"padding_bottom":0}}},"order":["main","custom_liquid_dmMFcx","recharge_recommendations_f8k8Gt"]}